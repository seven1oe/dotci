on: push

env:
  CHERE_INVOKING: 1
  MSYSTEM: MINGW64

  BLIS_VERSION: 0.8.1
  PYTORCH_VERSION: 1.10.1

jobs:
  build:
    runs-on: windows-2019
    defaults:
      run:
        shell: cmd
    steps:
    # - uses: actions/checkout@v2
    - run: |
        git config --global core.autocrlf false

    - shell: C:\msys64\usr\bin\bash.exe -l {0} # msys2_shell.cmd -defterm -no-start -mingw64 -here {0}
      run: |
        pacman -Sy --noconfirm --needed mingw-w64-x86_64-{gcc,make,cmake}
        pacman -Sy --noconfirm --needed mingw-w64-x86_64-{python,python-pip,python-yaml,python-typing_extensions}
      #
      # pacman -Sy --noconfirm mingw-w64-x86_64-{protobuf,eigen3} # openblas

    - run: |
        git clone -b %BLIS_VERSION% https://github.com/flame/blis.git

    - working-directory: blis
      shell: C:\msys64\usr\bin\bash.exe -l {0}
      run: |
        ./configure --disable-shared \
                    --enable-static \
                    --enable-cblas \
                    --enable-threading=openmp \
                    --prefix=$(cygpath -u $GITHUB_WORKSPACE)/libtorch \
                    auto
        mingw32-make -j $(nproc)
        mingw32-make install
      #             --prefix=/$(echo "$GITHUB_WORKSPACE" | sed 's#:##;s#\\#/#g;s#\(.*\)#\L\1#')/libtorch \
      #             --prefix=/$(sed 's#:##;s#\\#/#g;s#\(.*\)#\L\1#' <<< "$GITHUB_WORKSPACE")/libtorch \

    - run: |
        git clone --recursive -b v%PYTORCH_VERSION% https://github.com/pytorch/pytorch.git

    - working-directory: pytorch
      run: |
        sed -i 's@__declspec(dllimport)@@' aten\src\TH\THGeneral.h.in
        sed -i 's@#define TH_API TH_CPP_API@#define TH_API TH_EXTERNC TH_CPP_API@' aten\src\TH\THGeneral.h.in
        
        sed -i 's@_MSC_VER@_WIN64@' c10\core\CPUAllocator.cpp
        sed -i 's@TORCH_API@C10_API@' c10\core\GeneratorImpl.h
        sed -i 's@_MSC_VER@_WIN64@' c10\core\impl\LocalDispatchKeySet.h
        sed -i 's@_MSC_VER@_WIN64@' c10\core\impl\LocalDispatchKeySet.cpp
        sed -i 's@TORCH_API@C10_API@' c10\core\GradMode.h
        sed -i 's@TORCH_API@C10_API@' c10\core\InferenceMode.h
        
        sed -i 's@EXPORT_IF_NOT_GCC@C10_EXPORT@' c10\util\typeid.cpp
        sed -i 's@  EXPORT_IF_NOT_GCC@  C10_EXPORT@' c10\util\typeid.h
        sed -i 's@TORCH_API@C10_EXPORT@' c10\util\UniqueVoidPtr.h
        
        sed -i 's@__declspec(dllimport)@@' c10\macros\Export.h
        
        sed -i 's@_MSC_VER@_WIN64@' caffe2\distributed\file_store_handler.cc
        
        sed -i '/_aligned_malloc/i\#elif defined(_WIN64)' caffe2\utils\threadpool\WorkersPool.h
        sed -i '/_aligned_free/i\#elif defined(_WIN64)' caffe2\utils\threadpool\WorkersPool.h
        
        sed -i 's@_MSC_VER@_WIN64@' torch\csrc\jit\codegen\fuser\cpu\temp_file.h
        sed -i 's@_MSC_VER@_WIN64@' torch\csrc\jit\frontend\strtod.cpp
        sed -i 's@_MSC_VER@_WIN64@' torch\csrc\Module.cpp
        
        sed -i "s@!defined(__INTEL_COMPILER))@!defined(__INTEL_COMPILER) \&\& (__GNUC__ < 11))@" third_party\XNNPACK\src\xnnpack\intrinsics-polyfill.h
        
        sed -i 's@_WIN32@_MSC_VER@' third_party\onnx\onnx\checker.cc
      #
      # sed -i -zE 's@\(_MSC_VER\)(\n.+?_aligned_malloc)@(_WIN64)\1@m' caffe2\utils\threadpool\WorkersPool.h
      # sed -i -zE 's@\(_MSC_VER\)(\n.+?_aligned_free)@(_WIN64)\1@m' caffe2\utils\threadpool\WorkersPool.h
      # sed -i 's@__declspec(dllexport)@__attribute__((__visibility__("default")))@' c10\macros\Export.h
      # sed -i 's@__declspec(dllimport)@@' third_party\sleef\src\libm\sleeflibm_header.h.org.in

    - working-directory: pytorch
      run: |
        sed -i '$a\set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpermissive")' caffe2\perfkernels\CMakeLists.txt
        
        sed -i '/add_subdirectory(quantized)/i\list(REVERSE native_ao_sparse_cpp)\n' aten\src\ATen\CMakeLists.txt
        
        sed -i 's@ -Werror=format@ -Werror=format -Wno-error=nonnull@' CMakeLists.txt
        
        sed -i 's@-fPIC@-fPIC -fno-keep-inline-dllexport -DSLEEF_STATIC_LIBS@' CMakeLists.txt

    - working-directory: pytorch
      run: |
        sed -i 's@-O2@-O4 -msse2 -msse3 -msse4@' CMakeLists.txt
        
        sed -i 's@  "blis")@  "blis;gomp")@' cmake\Modules\FindBLAS.cmake

    - working-directory: pytorch
      run: |
        mkdir build

    - working-directory: pytorch\build
      shell: C:\msys64\usr\bin\bash.exe -l {0}
      run: |
        cmake -G "MinGW Makefiles" .. -DCMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/libtorch" -DPYTHON_EXECUTABLE=$(which python) \
                                      -DWITH_BLAS=blis \
                                      -DUSE_BREAKPAD=OFF \
                                      -DUSE_KINETO=OFF \
                                      -DBUILD_PYTHON=OFF \
                                      -DBUILD_CAFFE2=OFF \
                                      -DUSE_CUDA=OFF \
                                      -DUSE_NUMPY=OFF \
                                      -DUSE_FBGEMM=OFF \
                                      -DUSE_MKLDNN=OFF \
                                      -DUSE_NNPACK=OFF \
                                      -DUSE_QNNPACK=OFF \
                                      -DUSE_PYTORCH_QNNPACK=OFF
        mingw32-make -j $(nproc)
        mingw32-make install
      #
      #                               -DBUILD_CUSTOM_PROTOBUF=OFF \
      #                               -DUSE_SYSTEM_EIGEN_INSTALL=ON \

    - uses: actions/upload-artifact@v2
      with:
        name: libtorch
        path: libtorch
