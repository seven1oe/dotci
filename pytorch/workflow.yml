on: push

env:
  CHERE_INVOKING: 1
  MSYSTEM: MINGW64

  PYTORCH_VERSION: 1.6.0

jobs:
  build:
    runs-on: windows-2019
    defaults:
      run:
        shell: cmd
    steps:
    - uses: actions/checkout@v2

    - shell: C:\msys64\usr\bin\bash.exe -l {0} # msys2_shell.cmd -defterm -no-start -mingw64 -here {0}
      run: |
        pacman -Sy --noconfirm mingw-w64-x86_64-{gcc,make,cmake,python,python-pip,python-yaml}
      #
      # pacman -Sy --noconfirm mingw-w64-x86_64-{protobuf,eigen3,openmp} # openblas

    - run: |
        git clone --recursive -b v%PYTORCH_VERSION% https://github.com/pytorch/pytorch.git

    - working-directory: pytorch
      run: |
        sed -i 's@_MSC_VER@_WIN64@' c10\core\CPUAllocator.cpp
        sed -i 's@CAFFE2_API@C10_API@' c10\core\GeneratorImpl.h
        
        sed -i 's@EXPORT_IF_NOT_GCC@C10_EXPORT@' c10\util\typeid.cpp
        sed -i 's@__clang__@_WIN64@' c10\util\typeid.h
        sed -i 's@CAFFE2_API@C10_EXPORT@' c10\util\UniqueVoidPtr.h
        
        sed -i 's@__declspec(dllimport)@@' c10\macros\Export.h
        
        sed -i 's@_MSC_VER@_WIN64@' torch\csrc\jit\codegen\fuser\cpu\temp_file.h
        sed -i 's@_MSC_VER@_WIN64@' torch\csrc\jit\frontend\strtod.cpp
        sed -i 's@C10_HIDDEN @@' torch\csrc\utils\throughput_benchmark.h
        sed -i 's@_MSC_VER@_WIN64@' torch\csrc\Module.cpp
        
        sed -i 's@find_package(AVX)@@' cmake\Dependencies.cmake
        
        sed -i 's@_MSC_VER@_WIN64@' caffe2\distributed\file_store_handler.cc
        
        sed -i '$a set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpermissive")' caffe2\perfkernels\CMakeLists.txt

    - working-directory: pytorch
      run: |
        sed -i 's@__declspec(dllimport)@@' aten\src\TH\THGeneral.h.in
        sed -i 's@#define TH_API TH_CPP_API@#define TH_API TH_EXTERNC TH_CPP_API@' aten\src\TH\THGeneral.h.in
        
        sed -i '/_aligned_malloc/i\#elif defined(_WIN64)' caffe2\utils\threadpool\WorkersPool.h
        sed -i '/_aligned_free/i\#elif defined(_WIN64)' caffe2\utils\threadpool\WorkersPool.h
      #
      # sed -i -zE 's@\(_MSC_VER\)(\n.+?_aligned_malloc)@(_WIN64)\1@m' caffe2\utils\threadpool\WorkersPool.h
      # sed -i -zE 's@\(_MSC_VER\)(\n.+?_aligned_free)@(_WIN64)\1@m' caffe2\utils\threadpool\WorkersPool.h

    - working-directory: pytorch
      run: |
        sed -i 's@-O2@-O4 -msse2 -msse3 -msse4@' CMakeLists.txt

    - working-directory: pytorch
      run: |
        mkdir build
        mkdir third_party\eigen\build

    - working-directory: pytorch\build
      shell: C:\msys64\usr\bin\bash.exe -l {0}
      run: |
        cmake -G "MinGW Makefiles" .. -DCMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/libtorch" -DPYTHON_EXECUTABLE=$(which python) \
                                      -DUSE_OPENMP=OFF \
                                      -DBUILD_PYTHON=OFF \
                                      -DBUILD_CAFFE2_OPS=OFF \
                                      -DUSE_CUDA=OFF \
                                      -DUSE_NUMPY=OFF \
                                      -DUSE_FBGEMM=OFF \
                                      -DUSE_MKLDNN=OFF \
                                      -DUSE_NNPACK=OFF \
                                      -DUSE_QNNPACK=OFF \
                                      -DUSE_PYTORCH_QNNPACK=OFF
        mingw32-make -j $(nproc)
        mingw32-make install
      #
      #                               -DUSE_OPENMP=ON \
      #                               -DUSE_SYSTEM_EIGEN_INSTALL=ON \
      #                               -DBUILD_CUSTOM_PROTOBUF=OFF \

    - working-directory: pytorch\third_party\eigen\build
      shell: C:\msys64\usr\bin\bash.exe -l {0}
      run: |
        cmake -G "MinGW Makefiles" .. -DCMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/libtorch"
        mingw32-make install

    - uses: actions/upload-artifact@v2
      with:
        name: build
        path: libtorch
